name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 17 and Gradle cache
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    # Step 3: Give permission to gradlew
    - name: Grant execute permissions to gradlew
      run: chmod +x gradlew

    # Step 4: Build with Gradle (includes compilation and test)
    - name: Build with Gradle
      run: ./gradlew build

    # Step 5: Run tests separately (redundant if covered in build, but clear)
    - name: Run tests
      run: ./gradlew test

    # Step 6: Publish test results to PR (even on failure)
    - name: Publish test report to PR
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Unit Tests
        path: app/build/test-results/test/TEST-*.xml
        reporter: java-junit
        token: ${{ secrets.GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    # Step 1: Checkout the code again
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 17 and Gradle cache
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    # Step 3: Submit the dependency graph
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4
